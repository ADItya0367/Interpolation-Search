Interpolation Search 

LOGIC-Interpolation search is a searching technique which is just like the binary search and is used when the difference between the elements is not much larger. Interpolation search Mainly uses the formula as below:-

  mid = low + ((target - arr[low]) * (high - low)) / (arr[high] - arr[low]);

We will be using the same approach as the binary search , iteratively and recursively...just use this formula .


#include<iostream>
using namespace std;

int InterpolationSearch(int array[],int n,int target)
{
 while(low<=high)
{
  mid=(low+(target-arr[low])*(high-low))/(arr[high]-arr[low]);
  if(mid==target)
{
return mid;
}
else if(mid<=target)
{
  low=mid+1;
}
high=mid-1;

}
 return -1;

}

int main()
{
 
int array={1,3,5,8,3,6};
int target=6;
int n=sizeof(array)/sizeof(array[0]);
int result=InterpolationSearch(array,n,6);
if(result==-1)
{
  cout<<"element not found";
  cout<<"\n";
}
else
{
return result;
}
 return -1;
}